{"mappings":"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","sources":["src/customFunction/fetchFilmsTrends.js","src/customFunction/paginationBtnHidden.js","src/customFunction/functionCleanRender.js","src/customFunction/getGenreName.js","src/customFunction/trendfilmsMarkup.js","src/customFunction/filmsTrendRender.js","src/customFunction/pagination.js","src/index.js","src/customFunction/fetchGenreId.js"],"sourcesContent":["//import {displayPagination}//!!!!\n\nconst BASEURL = 'https://api.themoviedb.org/3/trending/';\nconst keyApi = '894ef72300682f1db325dae2afe3e7e2';\n\nexport function fetchFilmsTrends(page, urlPart) {\n  return fetch(`${BASEURL}${urlPart}?api_key=${keyApi}&page=${page}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n//https://api.themoviedb.org/3/trending/movie/week?api_key=894ef72300682f1db325dae2afe3e7e2&page=2\n//export default async function\n//const response = await axios.get(\n","export function paginationBtnHidden(page, paginationListEl, totalPage) {\n  if (page < 6) {\n    paginationListEl.classList.add('item--hidden-mob--1');\n  }\n  if (page >= 6 && page <= totalPage - 5) {\n    paginationListEl.classList.add('item--hidden-mob--2');\n  }\n  if (page > totalPage - 5) {\n    paginationListEl.classList.add('item--hidden-mob--3');\n  }\n}\n","export function cleanRender(element) {\n  element.innerHTML = '';\n}\n","// import { genreIdArr } from '../controls/trendsControl';\nimport { genreIdArr } from '../../src/index';\nexport function getGenreName(genre_ids) {\n  let genreName = [];\n  genre_ids.forEach(genre_id => {\n    genreName.push(genreIdArr.find(genre => genre.id === genre_id).name);\n  });\n\n  // if (genreName.length > 2) {\n  //   genreName = genreName.slice(0, 2);\n  //   genreName.push('Other');\n  // }\n  return genreName;\n}\n","import { getGenreName } from './getGenreName';\nexport function createFilmMarkup(arrFilms) {\n  return arrFilms\n    .map(({ original_title, release_date, genre_ids, poster_path }) => {\n      let genres = getGenreName(genre_ids);\n\n      if (genres.length > 2) {\n        genres = genres.slice(0, 2);\n        genres.push('Other');\n      }\n      genres = genres.join(', ');\n\n      const date = new Date(release_date);\n      const yearRelease = date.getFullYear();\n      return `<div class=\"film-card\">\n      <div class=\"film-card__img-box\">\n        <a class=\"film-card__link link\" href=\"\">\n        <img class=\"film-card__img\"\n          src=\"https://www.themoviedb.org/t/p/w500/${poster_path}\"\n          alt=\"\"\n        />\n        </a></div>\n      \n        <div class=\"film-card__info\">\n          <h2 class=\"film-card__name film-card__item\">\n            ${original_title}\n          </h2>\n          <p class=\"film-card__data film-card__item\">\n            ${genres} | ${yearRelease}\n          </p>\n        </div>\n      \n    </div>`;\n    })\n    .join('');\n}\n","import { createFilmMarkup } from './trendfilmsMarkup';\n\nexport function filmsTrendRender(data, destinationEl) {\n  const imgMarkUp = createFilmMarkup(data.results);\n  destinationEl.insertAdjacentHTML('beforeend', imgMarkUp);\n}\n","import { paginationBtnHidden } from './paginationBtnHidden';\nimport { cleanRender } from './functionCleanRender';\nimport { refs } from '../../src/index';\nimport { fetchFilmsTrends } from './fetchFilmsTrends';\nimport { urlPart } from '../../src/index';\nimport { filmsTrendRender } from './filmsTrendRender';\n//import { page } from '../../src/index';\n\nexport function displayPagination(totalPage, page, currentPage) {\n  //console.log(arrFilms);\n  refs.incrementBtnEl.addEventListener('click', onIncrDecrBtnElClick);\n  refs.decrementBtnEl.addEventListener('click', onIncrDecrBtnElClick);\n  refs.paginationWrapEl.innerHTML = '<ul class=\"pagination__list list\"></ul>';\n  paginationListEl = document.querySelector('.pagination__list');\n  paginationListEl.addEventListener('click', onPaginationLiElClick);\n  for (let i = 1; i <= 9; i++) {\n    const classEl = `item${i}`;\n    const liEl = document.createElement('li');\n    liEl.classList.add('pagination__item');\n    liEl.classList.add(classEl);\n    liEl.innerText = page;\n\n    paginationListEl.appendChild(liEl);\n    if (Number(currentPage) === i) {\n      liEl.classList.add('pagination__item--active');\n    }\n  }\n  paginationListEl.firstChild.textContent = '1';\n\n  paginationListEl.lastChild.textContent = totalPage;\n  // ----- 1 Ver\n  if (page <= 6) {\n    for (let i = 2; i <= 7; i++) {\n      const pageClass = `.item${i}`;\n      paginationListEl.querySelector(pageClass).textContent = i;\n    }\n    paginationListEl.querySelector('.item8').textContent = '...';\n    paginationBtnHidden(page, paginationListEl, totalPage);\n  }\n  // --- 2 Ver\n  if (page > 6 && page < totalPage - 5) {\n    for (let i = -2; i <= +2; i++) {\n      newBtnNumber = Number(currentPage) + i;\n      liClass = `.item${i + 5}`;\n\n      paginationListEl.querySelector(liClass).textContent = newBtnNumber;\n      if (Number(currentPage) === newBtnNumber) {\n        currentItemLi = document.querySelector('.pagination__item--active');\n        if (currentItemLi) {\n          currentItemLi.classList.remove('pagination__item--active');\n        }\n\n        paginationListEl\n          .querySelector(liClass)\n          .classList.add('pagination__item--active');\n      }\n    }\n    paginationListEl.querySelector('.item2').textContent = '...';\n    paginationListEl.querySelector('.item8').textContent = '...';\n    paginationBtnHidden(page, paginationListEl, totalPage);\n  }\n  // ---- 3 Ver\n  if (page >= totalPage - 5) {\n    for (let i = -6; i <= 0; i++) {\n      newBtnNumber = totalPage + i;\n      liClass = `.item${i + 9}`;\n\n      paginationListEl.querySelector(liClass).textContent = newBtnNumber;\n\n      paginationListEl.querySelector(liClass).textContent = newBtnNumber;\n      if (Number(currentPage) === newBtnNumber) {\n        currentItemLi = document.querySelector('.pagination__item--active');\n        if (currentItemLi) {\n          currentItemLi.classList.remove('pagination__item--active');\n        }\n\n        paginationListEl\n          .querySelector(liClass)\n          .classList.add('pagination__item--active');\n      }\n      paginationListEl.querySelector('.item2').textContent = '...';\n      paginationBtnHidden(page, paginationListEl, totalPage);\n    }\n  }\n}\n//------------------------------------\nfunction onPaginationLiElClick(evt) {\n  currentItemLi = document.querySelector('.pagination__item--active');\n  if (currentItemLi) {\n    currentItemLi.classList.remove('pagination__item--active');\n  }\n  cleanRender(refs.galleryEl);\n\n  page = evt.target.innerText;\n  if (evt.target.innerText === '...') {\n    if (evt.target.classList.contains('item8')) {\n      page = Number(evt.target.previousSibling.innerText) + 1;\n    }\n    if (evt.target.classList.contains('item2')) {\n      page = Number(evt.target.nextSibling.innerText) - 1;\n    }\n  }\n  currentPage = page;\n\n  fetchFilmsTrends(page, urlPart).then(data => {\n    const destinationEl = refs.galleryEl;\n    filmsTrendRender(data, destinationEl);\n\n    displayPagination(data.total_pages, page, currentPage);\n  });\n}\n//---------------------------------\nfunction onIncrDecrBtnElClick(evt) {\n  cleanRender(refs.galleryEl);\n  if (evt.currentTarget.dataset.action === 'increment') {\n    page = Number(page) + 1;\n  }\n  if (evt.currentTarget.dataset.action === 'decrement') {\n    page = Number(page) - 1;\n  }\n  currentPage = page;\n  fetchFilmsTrends(page, urlPart).then(data => {\n    const destinationEl = refs.galleryEl;\n    filmsTrendRender(data, destinationEl);\n\n    displayPagination(data.total_pages, page, currentPage);\n  });\n}\n","import fetchGenreId from './customFunction/fetchGenreId';\nimport { fetchFilmsTrends } from './customFunction/fetchFilmsTrends'; //Q\nimport { displayPagination } from './customFunction/pagination';\nimport { filmsTrendRender } from './customFunction/filmsTrendRender';\n\nimport '../css/index.css';\nlet page = 1; //ost\nexport const urlPart = 'movie/week';\nexport let genreIdArr = []; //не трогать\n\nfetchGenreId()\n  .then(genreId => {\n    genreIdArr = genreId.genres;\n  })\n  .catch(error => console.log(error));\n\n// -----------------\n\n//let totalPage; //**** */\n\n// let currentPage = 1;\n\n//const galleryEl = document.querySelector('.films-gallery');\nexport const refs = {\n  formEl: document.querySelector('.search-form'),\n  galleryEl: document.querySelector('.films-gallery'),\n  paginationEl: document.querySelector('.pagination'),\n  paginationWrapEl: document.querySelector('.pagination__wrap'),\n  decrementBtnEl: document.querySelector(`button[data-action=\"decrement\"]`),\n  incrementBtnEl: document.querySelector(`button[data-action=\"increment\"]`),\n}; //******\n\n// let paginationLiElArr;\nlet paginationListEl; //**** */\n// let paginationLiEl;\n// let currentPageLiEl;\n// let liArr;\nlet currentItemLi; //**** */\nlet newBtnNumber; //**** */\nlet liClass; //***** */\n\n//---- создает 1 страницу трендов\nfetchFilmsTrends(page, urlPart).then(data => {\n  const destinationEl = refs.galleryEl;\n  filmsTrendRender(data, destinationEl);\n  let totalPage = data.total_pages;\n  let currentPage = 1;\n  if (totalPage > 1) {\n    console.log('in index 2');\n    displayPagination(data.total_pages, page, currentPage);\n  }\n});\n\n//----- Pagination -----\n\n//------------------------------------\n\n//------------------------\n","export default function fetchGenreId() {\n  return fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=894ef72300682f1db325dae2afe3e7e2&language=en-US'\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n}\n"],"names":["$c108917dde1ea6b4$export$25311eb0e0625687","page","urlPart","fetch","concat","then","response","ok","Error","status","json","$a3b05ac743626deb$export$ff7cf5e0f415b90e","paginationListEl","totalPage","classList","add","$16681dd921dd6c04$export$82c99e68956acb60","element","innerHTML","$6ef29c1352fe1277$export$e1e489d92e562b7b","genre_ids","genreName","forEach","genre_id","push","$b8f9b7833fa37166$export$88c94c87660d44ec","find","genre","id","name","$b5d0c113f99e243d$export$34f980816dd5ca83","arrFilms","map","param","original_title","release_date","poster_path","genres","length","slice","join","yearRelease","Date","getFullYear","$218f52aadb208225$export$e034e57e3a7a732f","data","destinationEl","imgMarkUp","results","insertAdjacentHTML","$85796279c3771b30$export$887698316ae08cd6","currentPage","$b8f9b7833fa37166$export$21666b427502ea6d","incrementBtnEl","addEventListener","$85796279c3771b30$var$onIncrDecrBtnElClick","decrementBtnEl","paginationWrapEl","document","querySelector","$85796279c3771b30$var$onPaginationLiElClick","i","classEl","liEl","createElement","innerText","appendChild","Number","firstChild","textContent","lastChild","i1","pageClass","i2","newBtnNumber","liClass","currentItemLi","remove","i3","evt","galleryEl","target","contains","previousSibling","nextSibling","$b8f9b7833fa37166$export$14099b9669f94b27","total_pages","currentTarget","dataset","action","genreId","catch","error","console","log","formEl","paginationEl"],"version":3,"file":"index.95297ea4.js.map"}