{"mappings":"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","sources":["src/customFunction/fetchFilmsTrends.js","src/customFunction/getGenreName.js","src/customFunction/trendfilmsMarkup.js","src/customFunction/filmsTrendRender.js","src/customFunction/pagination.js","src/index.js","src/customFunction/fetchGenreId.js"],"sourcesContent":["//import {displayPagination}//!!!!\n\nconst BASEURL = 'https://api.themoviedb.org/3/trending/';\nconst keyApi = '894ef72300682f1db325dae2afe3e7e2';\n\nexport function buildUrl(pageNumber) {\n  const key = '894ef72300682f1db325dae2afe3e7e2';\n  const baseUrl = `https://api.themoviedb.org/3/trending/`;\n  const mediaType = `movie`;\n  const time_window = `day`;\n\n  return `${baseUrl}${mediaType}/${time_window}?api_key=${key}&page=${pageNumber}`;\n}\n\nexport function fetchFilmsTrends(page, urlPart) {\n  return fetch(`${BASEURL}${urlPart}?api_key=${keyApi}&page=${page}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\nexport function fetchFilms(page) {\n  return fetch(buildUrl(page)).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n//https://api.themoviedb.org/3/trending/movie/week?api_key=894ef72300682f1db325dae2afe3e7e2&page=2\n//export default async function\n//const response = await axios.get(\n","// import { genreIdArr } from '../controls/trendsControl';\nimport { genreIdArr } from '../../src/index';\nexport function getGenreName(genre_ids) {\n  let genreName = [];\n  genre_ids.forEach(genre_id => {\n    genreName.push(genreIdArr.find(genre => genre.id === genre_id).name);\n  });\n\n  // if (genreName.length > 2) {\n  //   genreName = genreName.slice(0, 2);\n  //   genreName.push('Other');\n  // }\n  return genreName;\n}\n","import { getGenreName } from './getGenreName';\nexport function createFilmMarkup(arrFilms) {\n  return arrFilms\n    .map(({ original_title, release_date, genre_ids, poster_path }) => {\n      let genres = getGenreName(genre_ids);\n\n      if (genres.length > 2) {\n        genres = genres.slice(0, 2);\n        genres.push('Other');\n      }\n      genres = genres.join(', ');\n\n      const date = new Date(release_date);\n      const yearRelease = date.getFullYear();\n      return `<div class=\"film-card\">\n      <div class=\"film-card__img-box\">\n        <a class=\"film-card__link link\" href=\"\">\n        <img class=\"film-card__img\"\n          src=\"https://www.themoviedb.org/t/p/w500/${poster_path}\"\n          alt=\"\"\n        />\n        </a></div>\n      \n        <div class=\"film-card__info\">\n          <h2 class=\"film-card__name film-card__item\">\n            ${original_title}\n          </h2>\n          <p class=\"film-card__data film-card__item\">\n            ${genres} | ${yearRelease}\n          </p>\n        </div>\n      \n    </div>`;\n    })\n    .join('');\n}\n","import { createFilmMarkup } from './trendfilmsMarkup';\n\nexport function filmsTrendRender(data, destinationEl) {\n  const imgMarkUp = createFilmMarkup(data.results);\n  destinationEl.insertAdjacentHTML('beforeend', imgMarkUp);\n}\n","import { paginationBtnHidden } from './paginationBtnHidden';\nimport { cleanRender } from './functionCleanRender';\nimport { refs } from '../../src/index';\nimport { fetchFilmsTrends } from './fetchFilmsTrends';\nimport { urlPart } from '../../src/index';\nimport { filmsTrendRender } from './filmsTrendRender';\nimport { buildUrl } from './fetchFilmsTrends';\n//import { page } from '../../src/index';\n\nexport function paginationRender(totalPages, currentPage) {\n  //console.log(arrFilms);\n  //   refs.incrementBtnEl.addEventListener('click', onIncrDecrBtnElClick);\n  //   refs.decrementBtnEl.addEventListener('click', onIncrDecrBtnElClick);\n  //refs.paginationWrapEl.innerHTML = '<ul class=\"pagination__list list\"></ul>';\n  //paginationListEl = document.querySelector('.pagination__list');\n  //paginationListEl.addEventListener('click', onPaginationLiElClick);\n  let paginationArrBtn = [];\n  let paginationArrAtr = [];\n  let paginationLinks = '';\n\n  //   for (let i = 1; i <= 9; i++) {\n  //     const classEl = `item${i}`;\n  // const liEl = document.createElement('li');\n  // liEl.classList.add('pagination__item');\n  // liEl.classList.add(classEl);\n  // liEl.innerText = page;\n\n  // paginationListEl.appendChild(liEl);\n  // if (currentPage === i) {\n  //   liEl.classList.add('pagination__item--active');\n  // }\n  //   }\n  //   paginationListEl.firstChild.textContent = '1';\n\n  //   paginationListEl.lastChild.textContent = totalPage;\n  // ----- 1 Ver\n  if (currentPage <= 6) {\n    for (let i = 1; i <= 7; i++) {\n      //const pageClass = `.item${i}`;\n      //   paginationListEl.querySelector(pageClass).textContent = i;\n      paginationArrBtn.push(i);\n      paginationArrAtr.push(i);\n    }\n    paginationArrBtn.push('...');\n    paginationArrAtr.push(8);\n    paginationArrBtn.push(totalPages);\n    paginationArrAtr.push(totalPages);\n    // paginationListEl.querySelector('.item8').textContent = '...';\n    // paginationBtnHidden(page, paginationListEl, totalPage);\n  }\n  // --- 2 Ver\n  if (currentPage > 6 && currentPage < totalPages - 5) {\n    paginationArrBtn.push(1);\n    paginationArrAtr.push(1);\n    paginationArrBtn.push('...');\n    paginationArrAtr.push(currentPage - 3);\n    for (let i = currentPage - 2; i <= currentPage + 2; i++) {\n      paginationArrBtn.push(i);\n      paginationArrAtr.push(i);\n      //   newBtnNumber = Number(currentPage) + i;\n      //   liClass = `.item${i + 5}`;\n\n      //   paginationListEl.querySelector(liClass).textContent = newBtnNumber;\n      //   if (Number(currentPage) === newBtnNumber) {\n      //     currentItemLi = document.querySelector('.pagination__item--active');\n      //     if (currentItemLi) {\n      //       currentItemLi.classList.remove('pagination__item--active');\n      //     }\n\n      // paginationListEl\n      //   .querySelector(liClass)\n      //   .classList.add('pagination__item--active');\n    }\n    paginationArrBtn.push('...');\n    paginationArrAtr.push(currentPage + 3);\n    paginationArrBtn.push(totalPages);\n    paginationArrAtr.push(totalPages);\n  }\n  // paginationListEl.querySelector('.item2').textContent = '...';\n  // paginationListEl.querySelector('.item8').textContent = '...';\n  // paginationBtnHidden(page, paginationListEl, totalPage);\n  //   }\n  // ---- 3 Ver\n  if (currentPage >= totalPages - 5) {\n    paginationArrBtn.push(1);\n    paginationArrAtr.push(1);\n    paginationArrBtn.push('...');\n    paginationArrAtr.push(totalPages - 7);\n    for (let i = -6; i <= 0; i++) {\n      //   newBtnNumber = totalPage + i;\n      //   liClass = `.item${i + 9}`;\n      paginationArrBtn.push(totalPages + i);\n      paginationArrAtr.push(totalPages + i);\n      //   paginationListEl.querySelector(liClass).textContent = newBtnNumber;\n\n      //   paginationListEl.querySelector(liClass).textContent = newBtnNumber;\n      //   if (Number(currentPage) === newBtnNumber) {\n      //     currentItemLi = document.querySelector('.pagination__item--active');\n      //     if (currentItemLi) {\n      //       currentItemLi.classList.remove('pagination__item--active');\n      //     }\n\n      //     paginationListEl\n      //       .querySelector(liClass)\n      //       .classList.add('pagination__item--active');\n      //   }\n      //   paginationListEl.querySelector('.item2').textContent = '...';\n      //   paginationBtnHidden(page, paginationListEl, totalPage);\n      // }\n    }\n  }\n\n  paginationArrBtn.forEach(pageNumber => {\n    let itemClass = paginationArrBtn.indexOf(pageNumber) + 1;\n    let activeClass =\n      pageNumber === currentPage ? 'pagination__item--active' : '';\n\n    paginationLinks =\n      paginationLinks +\n      `<li class=\"pagination__item item${itemClass}\"><a data-page=\"${\n        paginationArrAtr[itemClass - 1]\n      }\" href=\"${buildUrl(\n        paginationArrAtr[itemClass - 1]\n      )}\" class=\"link pagination__link ${activeClass} \">${pageNumber}</a></li>`;\n  });\n  return `<button class=\"btn--decrement\" data-page=\"${\n    currentPage - 1\n  }\" type=\"button\" >\n    <svg data-page=\"${\n      currentPage - 1\n    }\" class=\"pagination__icon\"  width=\"16\" height=\"16\">\n     <use href=\"./images/icons.svg#icon-arrow-left\"></use>\n    </svg>\n  </button>\n        <div class=\"pagination__wrap\">\n        <ul class=\"pagination__list\">\n        ${paginationLinks} </ul>\n        </div>\n        \n        <button class=\"btn--increment\" data-page=\"${\n          currentPage + 1\n        }\" type=\"button\" >\n    <svg class=\"pagination__icon\" data-page=\"${\n      currentPage + 1\n    } \"width=\"16\" height=\"16\">\n      <use href=\"./images/icons.svg#icon-arrow-right\"></use>\n    </svg>\n  </button>`;\n}\n\n//------------------------------------\nfunction onPaginationLiElClick(evt) {\n  currentItemLi = document.querySelector('.pagination__item--active');\n  if (currentItemLi) {\n    currentItemLi.classList.remove('pagination__item--active');\n  }\n  cleanRender(refs.galleryEl);\n\n  page = evt.target.innerText;\n  if (evt.target.innerText === '...') {\n    if (evt.target.classList.contains('item8')) {\n      page = Number(evt.target.previousSibling.innerText) + 1;\n    }\n    if (evt.target.classList.contains('item2')) {\n      page = Number(evt.target.nextSibling.innerText) - 1;\n    }\n  }\n  currentPage = page;\n\n  fetchFilmsTrends(page, urlPart).then(data => {\n    const destinationEl = refs.galleryEl;\n    filmsTrendRender(data, destinationEl);\n\n    displayPagination(data.total_pages, page, currentPage);\n  });\n}\n//---------------------------------\n\n//data-action=\"increment\"\n","import fetchGenreId from './customFunction/fetchGenreId';\nimport { fetchFilmsTrends } from './customFunction/fetchFilmsTrends'; //Q\nimport { paginationRender } from './customFunction/pagination';\nimport { filmsTrendRender } from './customFunction/filmsTrendRender';\nimport { fetchFilms } from './customFunction/fetchFilmsTrends';\nimport '../css/index.css';\n//ost\nexport const urlPart = 'movie/week';\nexport let genreIdArr = []; //не трогать\n\nfetchGenreId()\n  .then(genreId => {\n    genreIdArr = genreId.genres;\n  })\n  .catch(error => console.log(error));\n\n// -----------------\n\nexport const refs = {\n  formEl: document.querySelector('.search-form'),\n  galleryEl: document.querySelector('.films-gallery'),\n  paginationEl: document.querySelector('.pagination'),\n  paginationWrapEl: document.querySelector('.pagination__wrap'),\n  decrementBtnEl: document.querySelector(`button[data-action=\"decrement\"]`),\n  incrementBtnEl: document.querySelector(`button[data-action=\"increment\"]`),\n}; //******\n\n// let paginationLiElArr;\nlet paginationListEl; //**** */\n// let paginationLiEl;\n// let currentPageLiEl;\n// let liArr;\nlet currentItemLi; //**** */\nlet newBtnNumber; //**** */\nlet liClass; //***** */\nlet page = 1;\n\nfunction fetchMovies(page) {\n  fetchFilms(page).then(data => {\n    const destinationEl = refs.galleryEl;\n    filmsTrendRender(data, destinationEl);\n    let totalPage = data.total_pages;\n\n    if (totalPage > 1) {\n      const renderedPagination = paginationRender(\n        Number(data.total_pages),\n        Number(data.page)\n      );\n      refs.paginationEl.innerHTML = renderedPagination;\n    }\n  });\n}\n\nrefs.paginationEl.addEventListener('click', e => {\n  e.preventDefault();\n  console.log(e.target, e.target.dataset.page);\n  fetchMovies(e.target.dataset.page);\n  console.log('ku');\n});\n\n// function onIncrDecrBtnElClick(evt) {\n//   cleanRender(refs.galleryEl);\n//   if (evt.currentTarget.dataset.action === 'increment') {\n//     page = Number(page) + 1;\n//   }\n//   if (evt.currentTarget.dataset.action === 'decrement') {\n//     page = Number(page) - 1;\n//   }\n//   currentPage = page;\n//   fetchFilmsTrends(page, urlPart).then(data => {\n//     const destinationEl = refs.galleryEl;\n//     filmsTrendRender(data, destinationEl);\n\n//     displayPagination(data.total_pages, page, currentPage);\n//   });\n// }\nfetchMovies(page);\n","export default function fetchGenreId() {\n  return fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=894ef72300682f1db325dae2afe3e7e2&language=en-US'\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n\n    return response.json();\n  });\n}\n"],"names":["$c108917dde1ea6b4$export$b5cd97dee32de81d","pageNumber","concat","$c108917dde1ea6b4$export$651946d2de0aa03","page","fetch","then","response","ok","Error","status","json","$6ef29c1352fe1277$export$e1e489d92e562b7b","genre_ids","genreName","forEach","genre_id","push","$b8f9b7833fa37166$export$88c94c87660d44ec","find","genre","id","name","$b5d0c113f99e243d$export$34f980816dd5ca83","arrFilms","map","param","original_title","release_date","poster_path","genres","length","slice","join","yearRelease","Date","getFullYear","$218f52aadb208225$export$e034e57e3a7a732f","data","destinationEl","imgMarkUp","results","insertAdjacentHTML","$85796279c3771b30$export$5fcd9471792c11c9","totalPages","currentPage","paginationArrBtn","paginationArrAtr","paginationLinks","i","i1","i2","itemClass","indexOf","activeClass","genreId","catch","error","console","log","$b8f9b7833fa37166$export$21666b427502ea6d","formEl","document","querySelector","galleryEl","paginationEl","paginationWrapEl","decrementBtnEl","incrementBtnEl","$b8f9b7833fa37166$var$fetchMovies","page1","total_pages","renderedPagination","Number","innerHTML","addEventListener","e","preventDefault","target","dataset"],"version":3,"file":"index.a6fd1ebf.js.map"}